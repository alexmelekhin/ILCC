###### Files parameters
base_dir: ""  # the path of directory including img, pcd, out folders
file_name_digits: 4  # filename format
poses_num: 20  # the number of image-laserscan pairs


###### Pattern parameters
pattern_size: (6, 8)  # width and height (number of squares)
grid_length: 0.075  # the length of one grid of the pattern [m]


###### Image corner detection parameters
image_res: (4000, 8000)  # image resolution for panoramic images only
backend: 'opencv'  # backend of corners detection from the image, 'matlab' or 'opencv'
camera_type: 'perspective'  # camera model: 'panoramic' or 'perspective'
instrinsic_para: (166.87739756, 0., 311.29512622,  0., 334.91696616, 781.89612824,   0., 0., 1.)
# intrinsic parameters are necessary for perspective cameras (1,2,3,4,5,6,7,8,9)→　[1,2,3
#                                                                                   4,5,6
#                                                                                   7,8,9]
save_img_with_dectected_corners: True  # save images with detected corners
img_skip_ids: ()  # images ids to skip


###### Point cloud segmentation parameters
do_segmentation: True  # if False, skip segmentation (should be True on first run)
LiDAR_type: 'hdl32'  # available choices 'vlp16_puck', 'hdl32', 'hdl64'
laser_beams_num: 32  # the number of the laser beams of the Velodyne LiDAR
jdc_thre_ratio: 5  # the ratio of adaptive threshold for clustering scanline
agglomerative_cluster_th_ratio: 5  # the ratio of adaptive threshold for combining the scanline cluters
pcd_skip_ids: ()  # point cloud ids to skip


###### Chessboard detection parameters
chessboard_detect_planar_PCA_ratio: 0.01  # the threshold of the planarity check of the potential chessboard with PCA
marker_range_limit: 5  # the farthest range of the chessboard for filtering irrelative segments. Segments whose centroid to Velodyne farther that this threshold will not be considered as a potential chessboard
min_scale: 0.8  # chessboard should be larger than pattern size with this scale
max_scale: 1.6  # chessboard should be smaller than pattern size with this scale


###### 3D pattern corner detection parameters
start_pattern_corner: 0  # the color of the pattern in the left down of the chessboard: 0 for black, 1 for white


###### Calibration estimation parameters
save_back_proj_corners: True  # save back-projected point cloud corners to the image


###### Point cloud multi-processing parameters
multi_proc: True  # use multiple processing
proc_num: 4  # the number of cores to use for multiple processing


###### Online debugging parameters
show_img_corners: False  # show image corners after detection

show_candidates: False  # show all candidates for chessboard (3D)
show_found_board: False  # show chessboard (3D)
show_XY_board: False  # show chessboard shifted into XY plane (2D)
show_refined_board: False  # show refined chessboard segment

